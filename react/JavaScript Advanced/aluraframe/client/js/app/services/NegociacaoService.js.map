{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","resolve","reject","get","then","response","console","log","map","Date","obj","data","quantidade","valor","catch","error","negociacao","getConnection","conexao","dao","adiciona","erro","Error","connection","listaTodos","removeTodos","listaNegociacoesAtual","all","getNegociacoesSemana","getNegociacoesSemanaAnterior","getNegociacoesSemanaRetrasada","negociacoes","reduce","arrayAchatado","array","concat","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"./HttpService\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory\";\r\nimport { NegociacaoDao } from \"../dao/NegociacaoDao\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\n\r\nexport class NegociacaoService{\r\n\r\n    constructor(){\r\n      this._http = new HttpService();\r\n    }\r\n\r\n    getNegociacoesSemana(){\r\n    \r\n        return new Promise((resolve, reject) => {  \r\n          this._http\r\n          .get('negociacoes/semana')\r\n          .then((response) => {\r\n            console.log(response);\r\n            resolve( response.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)) )\r\n          })\r\n          .catch((error)=>{\r\n            console.log(error);\r\n            reject('Não foi possivel obter as negociações da semana atual');\r\n          })\r\n        });\r\n\r\n    }\r\n\r\n    getNegociacoesSemanaAnterior(){\r\n\r\n      return new Promise((resolve, reject) => {  \r\n        this._http\r\n        .get('negociacoes/anterior')\r\n        .then((response) => {\r\n          resolve( response.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)) )\r\n        })\r\n        .catch((error)=>{\r\n          console.log(error);\r\n          reject('Não foi possivel obter as negociações da semana anterior');\r\n        })\r\n      });\r\n       \r\n    }\r\n\r\n    getNegociacoesSemanaRetrasada(){\r\n      return new Promise((resolve, reject) => {  \r\n        this._http\r\n        .get('negociacoes/retrasada')\r\n        .then((response) => {\r\n          resolve( response.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)) )\r\n        })\r\n        .catch((error)=>{\r\n          console.log(error);\r\n          reject('Não foi possivel obter as negociações da semana retrasada');\r\n        })\r\n      });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n      return ConnectionFactory\r\n         .getConnection()\r\n         .then(conexao => new NegociacaoDao(conexao))\r\n         .then(dao => dao.adiciona(negociacao))\r\n         .then(() => 'Negociação cadastrada com sucesso')\r\n         .catch(erro => {\r\n             console.log(erro);\r\n             throw new Error(\"Não foi possível adicionar a negociação\")\r\n         });\r\n    }\r\n\r\n    lista() {\r\n\r\n      return ConnectionFactory\r\n        .getConnection()\r\n        .then(connection => {\r\n          return new NegociacaoDao(connection)\r\n        })\r\n        .then(dao => dao.listaTodos())\r\n        .catch(erro => {\r\n              console.log(erro);\r\n              throw new Error(\"Não foi possível listar as negociações\")\r\n        });\r\n    }\r\n\r\n    apaga(){\r\n      return ConnectionFactory\r\n      .getConnection()\r\n      .then((connection) => new NegociacaoDao(connection))\r\n      .then(dao => dao.removeTodos())\r\n      .then(() => 'Negociações apagadas com sucesso')\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível apagar as negociações\")\r\n       });\r\n    }\r\n\r\n    importa(listaNegociacoesAtual) {\r\n      return Promise.all([\r\n        this.getNegociacoesSemana(),\r\n        this.getNegociacoesSemanaAnterior(),\r\n        this.getNegociacoesSemanaRetrasada()\r\n      ])\r\n      .then((negociacoes) => {\r\n        return negociacoes.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n        .filter(negociacao => \r\n           !listaNegociacoesAtual.some(negociacaoExistente =>{\r\n            return negociacao.isEquals(negociacaoExistente);\r\n           })\r\n        )\r\n      })\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível apagar as negociações\")\r\n       });\r\n    }\r\n\r\n\r\n}"]}