{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","resolve","reject","get","then","response","map","Negociacao","Date","obj","data","quantidade","valor","catch","error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","conexao","dao","adiciona","console","log","erro","Error","connection","listaTodos","removeTodos","listaNegociacoesAtual","all","getNegociacoesSemana","getNegociacoesSemanaAnterior","getNegociacoesSemanaRetrasada","negociacoes","reduce","arrayAchatado","array","concat","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService{\r\n\r\n    constructor(){\r\n      this._http = new HttpService();\r\n    }\r\n\r\n    getNegociacoesSemana(){\r\n    \r\n        return new Promise((resolve, reject) => {  \r\n          this._http\r\n          .get('negociacoes/semana')\r\n          .then((response) => {\r\n            resolve( response.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)) )\r\n          })\r\n          .catch((error)=>{\r\n            reject('Não foi possivel obter as negociações da semana atual');\r\n          })\r\n        });\r\n\r\n    }\r\n\r\n    getNegociacoesSemanaAnterior(){\r\n\r\n      return new Promise((resolve, reject) => {  \r\n        this._http\r\n        .get('negociacoes/anterior')\r\n        .then((response) => {\r\n          resolve( response.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)) )\r\n        })\r\n        .catch((error)=>{\r\n          reject('Não foi possivel obter as negociações da semana anterior');\r\n        })\r\n      });\r\n       \r\n    }\r\n\r\n    getNegociacoesSemanaRetrasada(){\r\n      return new Promise((resolve, reject) => {  \r\n        this._http\r\n        .get('negociacoes/retrasada')\r\n        .then((response) => {\r\n          resolve( response.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)) )\r\n        })\r\n        .catch((error)=>{\r\n          reject('Não foi possivel obter as negociações da semana retrasada');\r\n        })\r\n      });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n      return ConnectionFactory\r\n         .getConnection()\r\n         .then(conexao => new NegociacaoDao(conexao))\r\n         .then(dao => dao.adiciona(negociacao))\r\n         .then(() => 'Negociação cadastrada com sucesso')\r\n         .catch(erro => {\r\n             console.log(erro);\r\n             throw new Error(\"Não foi possível adicionar a negociação\")\r\n         });\r\n    }\r\n\r\n    lista() {\r\n\r\n      return ConnectionFactory\r\n        .getConnection()\r\n        .then(connection => {\r\n          return new NegociacaoDao(connection)\r\n        })\r\n        .then(dao => dao.listaTodos())\r\n        .catch(erro => {\r\n              console.log(erro);\r\n              throw new Error(\"Não foi possível listar as negociações\")\r\n        });\r\n    }\r\n\r\n    apaga(){\r\n      return ConnectionFactory\r\n      .getConnection()\r\n      .then((connection) => new NegociacaoDao(connection))\r\n      .then(dao => dao.removeTodos())\r\n      .then(() => 'Negociações apagadas com sucesso')\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível apagar as negociações\")\r\n       });\r\n    }\r\n\r\n    importa(listaNegociacoesAtual) {\r\n      return Promise.all([\r\n        this.getNegociacoesSemana(),\r\n        this.getNegociacoesSemanaAnterior(),\r\n        this.getNegociacoesSemanaRetrasada()\r\n      ])\r\n      .then((negociacoes) => {\r\n        return negociacoes.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n        .filter(negociacao => \r\n           !listaNegociacoesAtual.some(negociacaoExistente =>{\r\n            return negociacao.isEquals(negociacaoExistente);\r\n           })\r\n        )\r\n      })\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível apagar as negociações\")\r\n       });\r\n    }\r\n\r\n\r\n}"]}